# Alembic Migrations

This directory contains database migration scripts managed by Alembic.

## Usage

### Create a new migration

```bash
# Auto-generate migration from model changes
make db-revision message="Add new field to user table"

# Or manually
alembic revision --autogenerate -m "Add new field to user table"
```

### Apply migrations

```bash
# Apply all pending migrations
make db-migrate

# Or manually
alembic upgrade head
```

### Rollback migrations

```bash
# Rollback one migration
make db-downgrade

# Or manually
alembic downgrade -1

# Rollback to specific revision
alembic downgrade <revision_id>
```

### View migration history

```bash
# Show current revision
alembic current

# Show migration history
alembic history

# Show pending migrations
alembic history --verbose
```

## Directory Structure

- `env.py` - Alembic environment configuration
- `script.py.mako` - Template for new migration files
- `versions/` - Migration files (created automatically)

## Best Practices

1. **Always review auto-generated migrations** - Alembic's autogenerate is smart but not perfect
2. **Test migrations** - Test both upgrade and downgrade
3. **One logical change per migration** - Makes rollback easier
4. **Add comments** - Explain complex migrations
5. **Backup before migrating** - Especially in production

## Common Issues

### "Target database is not up to date"

```bash
# Check current version
alembic current

# Upgrade to latest
alembic upgrade head
```

### "Can't locate revision"

```bash
# Reset to base and re-apply
alembic downgrade base
alembic upgrade head
```

### "Multiple heads detected"

```bash
# Merge migrations
alembic merge heads -m "Merge migrations"
```
